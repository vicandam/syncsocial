import{_ as i,c as f,w as a,e as t,a as p,d as e,f as l,h as n}from"./index-luijtTO6.js";const g={},h=n("strong",null,"Vue Range",-1),C=n("small",null,null,-1),x=n("p",{class:"text-body-secondary small"},[l(" Create custom "),n("code",null,'<input type="range">'),l(" controls with "),n("code",null,"<CFormRange>"),l(". ")],-1),b=n("strong",null,"Vue Range",-1),y=n("small",null,"Disabled",-1),R=n("p",{class:"text-body-secondary small"},[l(" Add the "),n("code",null,"disabled"),l(" boolean attribute on an input to give it a grayed out appearance and remove pointer events. ")],-1),v=n("strong",null,"Vue Range",-1),w=n("small",null,"Min and max",-1),V=n("p",{class:"text-body-secondary small"},[l(" Range inputs have implicit values for "),n("code",null,"min"),l(" and "),n("code",null,"max"),l("â€” "),n("code",null,"0"),l(" and "),n("code",null,"100"),l(", respectively. You may specify new values for those using the "),n("code",null,"min"),l(" and "),n("code",null,"max"),l(" attributes. ")],-1),B=n("strong",null,"Vue Range",-1),E=n("small",null,"Steps",-1),F=n("p",{class:"text-body-secondary small"},[l(' By default, range inputs "snap" to integer values. To change this, you can specify a '),n("code",null,"step"),l(" value. In the example below, we double the number of steps by using "),n("code",null,'step="0.5"'),l(". ")],-1);function D(N,k){const o=t("CCardHeader"),s=t("CFormLabel"),d=t("CFormRange"),u=t("DocsExample"),c=t("CCardBody"),_=t("CCard"),r=t("CCol"),m=t("CRow");return p(),f(m,null,{default:a(()=>[e(r,{xs:12},{default:a(()=>[e(_,{class:"mb-4"},{default:a(()=>[e(o,null,{default:a(()=>[h,l(),C]),_:1}),e(c,null,{default:a(()=>[x,e(u,{href:"forms/range.html"},{default:a(()=>[e(s,{for:"customRange1"},{default:a(()=>[l("Example range")]),_:1}),e(d,{id:"customRange1"})]),_:1})]),_:1})]),_:1})]),_:1}),e(r,{xs:12},{default:a(()=>[e(_,{class:"mb-4"},{default:a(()=>[e(o,null,{default:a(()=>[b,l(),y]),_:1}),e(c,null,{default:a(()=>[R,e(u,{href:"forms/range.html#disabled"},{default:a(()=>[e(s,{for:"disabledRange"},{default:a(()=>[l("Disabled range")]),_:1}),e(d,{id:"disabledRange",disabled:""})]),_:1})]),_:1})]),_:1})]),_:1}),e(r,{xs:12},{default:a(()=>[e(_,{class:"mb-4"},{default:a(()=>[e(o,null,{default:a(()=>[v,l(),w]),_:1}),e(c,null,{default:a(()=>[V,e(u,{href:"forms/range.html#min-and-max"},{default:a(()=>[e(s,{for:"customRange2"},{default:a(()=>[l("Example range")]),_:1}),e(d,{id:"customRange2",min:0,max:5,value:3})]),_:1})]),_:1})]),_:1})]),_:1}),e(r,{xs:12},{default:a(()=>[e(_,{class:"mb-4"},{default:a(()=>[e(o,null,{default:a(()=>[B,l(),E]),_:1}),e(c,null,{default:a(()=>[F,e(u,{href:"forms/range.html#steps"},{default:a(()=>[e(s,{for:"customRange3"},{default:a(()=>[l("Example range")]),_:1}),e(d,{id:"customRange3",min:0,max:5,step:.5,value:3})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})}const L=i(g,[["render",D]]);export{L as default};
